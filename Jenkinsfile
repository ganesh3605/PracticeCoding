// Jenkinsfile

pipeline {
    agent { label 'AgentRobot' } // You can specify a label here, e.g., agent { label 'linux-node' }
              // if you have specific Jenkins agents for your test execution.

    environment {
        // Define environment variables if needed
        // For headless Chrome, usually a display variable is needed
        DISPLAY = ':99'
        //Optional: Path to browser driver if not using webdriver_manager
        CHROMEDRIVER_PATH = 'C:\\Users\\Ganesh\\Downloads\\chromedriver-win64\\chromedriver-win64'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'master', url: 'https://github.com/ganesh3605/PracticeCoding.git'
                // Replace 'your-username/your-repo.git' with your actual repository.
                // If using credentials, use: checkout scm
            }
        }

        stage('Setup Environment') {
            steps {
                echo "Setting up Python environment and dependencies..."
                sh 'python3 -m venv venv'
                sh 'source venv/bin/activate' // Linux/macOS
                // For Windows: bat 'venv\\Scripts\\activate.bat'

                sh 'pip install --upgrade pip'
                sh 'pip install robotframework robotframework-seleniumlibrary webdriver_manager'

                // Install Google Chrome for headless execution if not already present on agent
                sh 'sudo apt-get update'
                sh 'sudo apt-get install -y google-chrome-stable'

                // Start Xvfb (Virtual Framebuffer) for headless browser execution
                // Only needed if not using a Docker image with it pre-configured
                sh 'sudo apt-get install -y xvfb'
                sh 'Xvfb :99 -screen 0 1280x720x24 & export DISPLAY=:99'
                // This starts a virtual display where the browser can run.
                // Ensure this is stopped in post section if not critical.
            }
        }

        stage('Run Robot Framework Tests') {
            steps {
                echo "Executing Robot Framework tests..."
                sh 'source venv/bin/activate && robot --outputdir output/ tests/sauce_demo_login_test_pom.robot'
                // For Windows: bat 'venv\\Scripts\\activate.bat && robot --outputdir output/ tests\\sauce_demo_login_test_pom.robot'
            }
        }
    }

    post {
        always {
            echo "Publishing Robot Framework results..."
            // Publish Robot Framework results using the Jenkins Robot Framework Plugin
            robot outputPath: 'output/', //Path to your output.xml
                  outputFileName: 'output.xml',
                  reportFileName: 'report.html',
                  logFileName: 'log.html',
                  passThreshold: 90.0, // Mark build as unstable if pass percentage is below this
                  unstableThreshold: 70.0, // Mark build as unstable if pass percentage is below this
                  otherFiles: '**/*.png', // Capture screenshots generated by SeleniumLibrary
                  disableArchiveOutput: false // Keep output.xml for reusability if needed
        }
        success {
            echo "Tests passed successfully!"
            // Optional: send email notification for success
            // mail to: 'your-email@example.com', subject: "Robot Framework Tests PASSED: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}"
        }
        failure {
            echo "Tests failed!"
            // Optional: send email notification for failure
            // mail to: 'your-email@example.com', subject: "Robot Framework Tests FAILED: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}"
        }
    }
}